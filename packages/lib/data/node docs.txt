Simple CLI (Recommended)
RECOMMENDED
Simple CLI also known as Subspace CLI is the recommended way to farm on the Subspace Network. To get started, follow the guide below. For more information, you can check out the project README on GitHub.

Pre-Requisites
System Requirements
FARMING CAN BE NETWORK INTENSIVE.
Make sure you have a stable network connection. During the plotting phase of farming, it can be network intensive.

This may impact your network usage so please check your network connection if you have a hard data limit.

Subspace CLI requires commodity hardware specs to operate. At a minimum, it is recommended to have:

Hardware	Specs
CPU	4 Core+
RAM	4GB+ (Rec. 8GB)
SWAP	4GB
Storage	100GB SSD
BUG#1388 - STORAGE GROWING TOO LARGE
We are currently investigating a bug that is causing the node Archive to exceed its expected growth. As a result, we suggest having a minimum of 150-200GB of storage available for your system.

Therefore, please make sure that you have at least ~150-200GB of storage in addition to your desired plot size.

For more information, please visit: https://github.com/subspace/subspace/issues/1388

COW FILE SYSTEMS WARNING
It is advised not to use the Subspace farmer and node on CoW file systems for any OS.

If BTRFS is used with Subspace, the directory/whole file system must be CoW disabled with the following command prior to starting Subspace.

Command to Cow Disable

sudo chattr +C path/to/datasubspace-cli-windows-x86_64-skylake-v0.42-alpha.exe

Alternatively, non-CoW file systems like ext4 or xfs can be used instead.

Getting A Crypto Wallet
Before running anything you need to have a wallet where you'll receive testnet coins. Follow our how-to guides in the Wallets section of the documentation for steps on how to get your wallet setup.

Required ports
Currently, a few ports need to be exposed for node to work properly.

If you have a server with no firewall, there is nothing to be done, but otherwise make sure to open the following TCP ports for incoming connections.

30333
30433
On the desktop side if you have a router in front of your computer, you'll need to forward TCP ports to the machine on which your node is running (how this is done varies from router to router, but there is always a feature like this, refer to How to Forward Ports for a more in-depth tutorial). If you're connected directly without any router, then again nothing needs to be done in such case.

Installation
ALPHA SOFTWARE
Subspace CLI is in alpha. Please feel free to file bug reports on our GitHub issues.

Download Binaries
Compiled versions of the Subspace CLI is hosted on GitHub. This is the recommended way to install the application. Please find the appropriate binary for your operating system.

üñºÔ∏è Windows
üçémacOS
üêßUbuntu
CAUTION
Some older processors/VMs are no longer supported by official releases, but can still be compiled manually if desired

Download your Release Binary below.
Expand for Ubuntu Executable
Expand for Aarch64/64-bit Raspberry Pi Executables
Open Terminal, type cd Downloads (or cd Your-File-Location).
Make the binary executable by running:
chmod +x subspace-cli-ubuntu-x86_64-skylake-v0.4.2-alpha (Ubuntu)
chmod +x subspace-cli-ubuntu-aarch64-v0.4.2-alpha (Ubuntu aarch64)
Configuration
To start we have to initialize our Farmer, this can be done with:

üñºÔ∏è Windows
üçé macOS
üêß Ubuntu
Ubuntu:

./subspace-cli-ubuntu-x86_64-skylake-v0.4.2-alpha init


Ubuntu Executable (aarch64):


./subspace-cli-ubuntu-aarch64-v0.4.2-alpha init


This will prompt you to setup your CLI configurations to begin farming. You should see a similar prompt like so (some info might be different than shown here w.r.t your OS):

version: 0.4.1

Configuration creation process has started...
Enter your farmer/reward address: REDACTED_ADDRESS
Enter your node name to be identified on the network(defaults to `username`, press enter to use the default):
Specify a path for storing plot files (press enter to use the default: `"/home/username/.local/share/subspace-cli/plots"`):
Specify a path for storing node files (press enter to use the default: `"/home/username/.local/share/subspace-cli/node"`):
Specify a plot size (defaults to `1000.0 MB`, press enter to use the default):
Specify the chain to farm. Available options are: [Gemini3d, Dev, DevNet].
 Defaults to `Gemini3d`, press enter to use the default:
Configuration has been generated at /home/username/.config/subspace-cli
Ready for lift off! Run the follow command to begin: `"path/to/executable" farm`

FINDING YOUR SETTINGS.TOML
After running subspace-cli init, the prompt will display where the settings.toml is generated. However in case you missed it, you can find the file based on your operating system:

üñºÔ∏è Windows
üçémacOS
üêßUbuntu
Your settings.toml will be found in $HOME/.config/subspace-cli/settings.toml

Gemini 3 Testnet
If you are using the default configurations from Subspace CLI, you are ready to go with the Gemini 3 Testnet. Alternatively, you can ensure this occurs by manually setting the network like so.

Open your settings.toml directory and ensure your chain is correctly specified to gemini-3c as so:

# settings.toml
[node]
chain = 'gemini-3c'
# ... redacted ...

Local Development
To run Subspace CLI in a local development mode, modify your settings.toml and ensure your chain points to dev:

# settings.toml
[node]
chain = 'dev'
# ... redacted ...

Farming
To begin farming on the network, just run the farm command with the CLI like so:

üñºÔ∏è Windows
üçé macOS
üêß Ubuntu
Ubuntu:


./subspace-cli-ubuntu-x86_64-skylake-v0.4.2-alpha farm


Ubuntu Executable (aarch64):


./subspace-cli-ubuntu-aarch64-v0.4.2-alpha farm


You should see the farmer and node start successfully and begin syncing, plotting, and then farming:

Starting node ... (this might take up to couple of minutes)
Node started successfully!
Starting farmer ...
Farmer started successfully!
Initial plotting for plot: #0 (/home/username/.local/share/subspace-cli/plots)
‚†Å [00:00:00] 3% [=>                                      ]
      (31.00 MiB/953.67 MiB) 157.35 GiB/s, plotting, ETA: 0s

That's it! Enjoy and Happy Farming!

Moving the Farming Process to the Background
Tmux
Screen
LEARN MORE ABOUT TMUX
If you want to learn more about Tmux and its options check out their Repo here

Create a new tmux session using a socket file named farming
$ tmux -S farming

Move process to background by detaching
Ctrl+b d OR ‚åò+b d (Mac)

To re-attach
$ tmux -S farming attach

To delete farming session
$ tmux kill-session -t farming

Having Trouble?
If you are facing issues with your node/farmer you can try a few of the following things below, if you are unable to get your issue resolved please check our Forums to see if your issue may have been solved, if its a new one feel free to post it! You can also join our Discord for additional Peer to Peer help.

View your Logs
A good place to start if you are facing trouble is by viewing your logs and seeing if there are any errors or insights that might be available. You can find the location for your logs below

üñºÔ∏è Windows
üçémacOS
üêßUbuntu
Your Logs will be found in $HOME/.local/share/subspace-cli/logs

Wipe Node & Farmer
UPDATED FROM A PREVIOUS VERSION AND NOW HAVING ISSUES?
Occasionally after updating to a new version of the CLI you will need to wipe your node and farmer, generally this should not be required but can be attempted if your farmer is having issues after having had worked fine previously.

To simply restart the node, go to the terminal where you started the farm command, and press Ctrl + C you should see a shutdown message appear and the application will attempt a simple shutdown, if you dont see the message press Ctrl + C again to force shutdown. You can then simply start the farmer again with the farm command you used prior.

Use the same file name as the previous init and farm steps, then add the wipe command to free the previous memory that was being used. Generally, only do this if you have severe errors and are prompted by a staff member.

./subspace-cli-file-name wipe

After wiping, follow the init and farm steps above to start farming again!



Advanced CLI
ADVANCED USAGE
Subspace CLI is the recommended way to farm on the Subspace Network. Follow the guide below to get started or check out the project README on GitHub.

I. Pre-requisites
A. System Requirements
NETWORK WARNING
You will also want to ensure you have a stable Network connection. It is also important to note that plotting can be network intensive and may impact network usage if you have a hard data limit.

COW FILE SYSTEMS WARNING
It is advised not to use the Subspace farmer and node on CoW file systems for any OS.

If BTRFS is used with Subspace, the directory/whole file system must be CoW disabled with the following command prior to starting Subspace.

Command to Cow Disable

sudo chattr +C path/to/data

Alternatively, non-CoW file systems like ext4 or xfs can be used instead.

Hardware	Specs
CPU	4 Core+
RAM	4GB+ (Rec. 8GB)
SWAP	4GB
Storage	100GB SSD
BUG#1388 - STORAGE GROWING TOO LARGE
We are currently investigating a bug that is causing the node Archive to exceed its expected growth. As a result, we suggest having a minimum of 150-200GB of storage available for your system.

Therefore, please make sure that you have at least ~150-200GB of storage in addition to your desired plot size.

For more information, please visit: https://github.com/subspace/subspace/issues/1388

B. Crypto Wallet
Before running anything you need to have a wallet where you'll receive testnet coins. There are currently two wallets we suggest using, SubWallet being the preferred route.

SubWallet
PolkadotJS
Install one of the two wallets above into your browser and create a new account there. The address of your account will be necessary at the last step.

For help refer to our forum post How to setup Subwallet & a Polkadot.js Wallet

make sure to follow the Bonus section of the bottom of the post above.
D. Required ports
Currently, a few ports need to be exposed for node to work properly.

If you have a server with no firewall, there is nothing to be done, but otherwise make sure to open the following TCP ports for incoming connections.

30333
30433
30533
On the desktop side if you have a router in front of your computer, you'll need to forward TCP ports to the machine on which your node is running (how this is done varies from router to router, but there is always a feature like this, refer to How to Forward Ports for a more in-depth tutorial). If you're connected directly without any router, then again nothing needs to be done in such case.

II. Installation
LOOKING FOR ALL RELEASES?
You can always find these executables in the Releases section on our GitHub

We will be downloading two files for your respective operating system.

Subspace-Node - This is the executable that actually makes the connection with the Subspace Network
Subspace-Farmer - This is the executable that will actually farm for rewards on your allocated storage plot.
Those using Docker will not have to download anything, just configure the docker-compose.yml
üêã Docker
üñºÔ∏è Windows
üçémacOS
üêßUbuntu
Intel CPU Ubuntu Executables
Aarch64/64-bit Raspberry Pi Executables
LINUX FILE DESCRIPTOR LIMIT
The Linux system has a hard file descriptor limit of 100k. If this is exceeded, an error will be thrown. For reference, Substrate by default has a 10k hard file descriptor limit.

The limit can generally be found on the path /proc/sys/fs/file-max. It is recommended to change the limit to 100k if it is not already. Here is an example tutorial.

Required dependencies
There are two packages that are typically already installed, but might be missing on your machine.

If you see this error:

error while loading shared libraries: libgomp.so.1: cannot open shared object file: No such file or directory

Make sure to install libgomp1 library with sudo apt-get install libgomp1.

Open your favorite terminal, and change to the Downloads directory using cd Downloads
Make the farmer & node executable
chmod +x subspace-farmer-ubuntu-x86_64-v3-gemini-3d-2023-may-15
chmod +x subspace-node-ubuntu-x86_64-v3-gemini-3d-2023-may-15
We will then start the node using the following command

# Replace `INSERT_YOUR_ID` with a nickname you choose
# Copy all of the lines below, they are all part of the same command
./subspace-node-ubuntu-x86_64-v3-gemini-3d-2023-may-15 \
  --chain gemini-3d \
  --execution wasm \
  --blocks-pruning archive \
  --state-pruning archive \
  --dsn-disable-private-ips \
  --no-private-ipv4 \
  --validator \
  --name INSERT_YOUR_ID

You should see something similar in the terminal:

2022-02-03 10:52:23 Subspace
2022-02-03 10:52:23 ‚úåÔ∏è  version 0.1.0-35cf6f5-x86_64-ubuntu
2022-02-03 10:52:23 ‚ù§Ô∏è  by Subspace Labs <https://subspace.network>, 2021-2022
2022-02-03 10:52:23 üìã Chain specification: Subspace Gemini 1
2022-02-03 10:52:23 üè∑  Node name: YOUR_FANCY_NAME
2022-02-03 10:52:23 üë§ Role: AUTHORITY
2022-02-03 10:52:23 üíæ Database: RocksDb at /home/X/.local/share/subspace-node-x86_64-ubuntu-20.04-snapshot-2022-jan-05/chains/subspace_test/db/full
2022-02-03 10:52:23 ‚õì  Native runtime: subspace-100 (subspace-1.tx1.au1)
2022-02-03 10:52:23 üî® Initializing Genesis block/state (state: 0x22a5‚Ä¶17ea, header-hash: 0x6ada‚Ä¶0d38)
2022-02-03 10:52:24 ‚è±  Loaded block-time = 1s from block 0x6ada0792ea62bf3501abc87d92e1ce0e78ddefba66f02973de54144d12ed0d38
2022-02-03 10:52:24 Starting archiving from genesis
2022-02-03 10:52:24 Archiving already produced blocks 0..=0
2022-02-03 10:52:24 üè∑  Local node identity is: 12D3KooWBgKtea7MVvraeNyxdPF935pToq1x9VjR1rDeNH1qecXu
2022-02-03 10:52:24 üßë‚Äçüåæ Starting Subspace Authorship worker
2022-02-03 10:52:24 üì¶ Highest known block at #0
2022-02-03 10:52:24 „ÄΩÔ∏è Prometheus exporter started at 127.0.0.1:9615
2022-02-03 10:52:24 Listening for new connections on 0.0.0.0:9944.
2022-02-03 10:52:26 üîç Discovered new external address for our node: /ip4/176.233.17.199/tcp/30333/p2p/12D3KooWBgKtea7MVvraeNyxdPF935pToq1x9VjR1rDeNH1qecXu
2022-02-03 10:52:29 ‚öôÔ∏è  Syncing, target=#215883 (2 peers), best: #55 (0xafc7‚Ä¶bccf), finalized #0 (0x6ada‚Ä¶0d38), ‚¨á 850.1kiB/s ‚¨Ü 1.5kiB/s


We will then open another terminal, change to the downloads directory, then start the farmer node with the following command:

# Replace `FARMER_FILE_NAME` with the name of the farmer file you downloaded from releases
# Replace `WALLET_ADDRESS` below with your account address from Polkadot.js wallet
./subspace-farmer-ubuntu-x86_64-v3-gemini-3d-2023-may-15 farm \
  --disable-private-ips \
  --reward-address WALLET_ADDRESS \
  --plot-size 10G

You should see something similar in the terminal:

2022-06-02T00:02:04.552120Z  INFO subspace_farmer::commands::farm: Connecting to node at ws://127.0.0.1:9944
2022-06-02T00:02:04.557220Z  INFO jsonrpsee_client_transport::ws: Connection established to target: Target sockaddrs: , host: "127.0.0.1", host_header: "127.0.0.1:9944", _mode: Plain, path_and_query: "/"
2022-06-02T00:02:04.575669Z  INFO subspace_farmer::commands::farm: Opening object mapping
2022-06-02T00:02:04.617553Z  INFO subspace_farmer::multi_farming: Opening plot
2022-06-02T00:02:04.645422Z  INFO subspace_farmer::multi_farming: Opening commitments
2022-06-02T00:02:04.666925Z  INFO subspace_farmer::farming: Subscribing to slot info notifications
2022-06-02T00:02:04.688218Z  INFO subspace_farmer::archiving: Subscribing to archived segments
2022-06-02T00:02:04.689129Z  INFO subspace_farmer::commands::farm: WS RPC server listening on 127.0.0.1:9955
2022-06-02T00:02:09.492868Z  INFO subspace_farmer::archiving: Plotted segment segment_index=0
2022-06-02T00:02:09.492868Z  INFO subspace_farmer::archiving: Plotted segment segment_index=1
2022-06-02T00:02:09.492868Z  INFO subspace_farmer::archiving: Plotted segment segment_index=2
2022-06-02T00:02:09.492868Z  INFO subspace_farmer::archiving: Plotted segment segment_index=3
2022-06-02T00:02:09.492868Z  INFO subspace_farmer::archiving: Plotted segment segment_index=4
2022-06-02T00:02:09.492868Z  INFO subspace_farmer::archiving: Plotted segment segment_index=5


You are now Farming! Just wait for your node to fully sync, and for your farmer to fully plot.

III. Post Node & Farmer Install Care
Now that your Node & Farmer have been started you will wait for the node to sync and the farmer to complete the initial plotting. While this is occurring you can check out some of the helpful resources below.

- Telemetry Server

- Block Explorer

Using a Custom Path
You can set a custom path for your node & farmer to use if you want to use an external hard drive, or set a custom path from the default. You can set the node and farmer to different directories if you would like.

1.üö© Node
2.üßë‚Äçüåæ Farmer
Set Node Custom Path.
To set your node to use a custom path all you will need to do is add the --base-path parameter after the --chain parameter.

Example:

.\subspace-node-ubuntu-x86_64-v3-gemini-3d-2023-may-15 --chain gemini-3d --base-path /path/to/directory/here --execution wasm --state-pruning archive --validator --name INSERT_YOUR_ID


Switching to a new snapshot
INFO
Unless specifically mentioned by the Development team you should NOT have to wipe & purge your configuration on new releases.

In general you should be able to download the latest release, and re-start the Node & Farmer with the same commands as you started to prior version with no errors.

There are some cases where version updates will cause issue with your Node & Farmer and you may have to wipe & purge your node, typically when errors occur. If you have any issues you can always check our Forums and hop in our Discord Server to ask for help.

Wipe & Purge
If you were running a node previously, and want to switch to a new snapshot, please perform these steps and then follow the guideline again:

# Replace `FARMER_FILE_NAME` with the name of the node file you downloaded from releases
./FARMER_FILE_NAME wipe
# Replace `NODE_FILE_NAME` with the name of the node file you downloaded from releases
./NODE_FILE_NAME purge-chain --chain gemini-3d

Does not matter if the node/farmer executable is the previous one or from the new snapshot, both will work :) The reason we require this is, with every snapshot change, the network might get partitioned, and you may be on a different genesis than the current one. In plain English, these commands are like a reset button for snapshot changes.

Now follow installation guide.

Docker Wipe & Purge
In case of Docker setup run docker-compose down -v (and manually delete custom directories if you have specified them).

Now follow installation guide.

Help
There are extra commands and parameters you can use on farmer or node, use the --help after any other command to display additional options.

Below are some helpful samples:

./FARMER_FILE_NAME --base-path /path/to/data farm ... : will store data in /path/to/data instead of default location
./FARMER_FILE_NAME --base-path /path/to/data wipe : erases everything related to farmer if data were stored in /path/to/data
./NODE_FILE_NAME --base-path /path/to/data --chain gemini-3d ... : start node and store data in /path/to/data instead of default location
./NODE_FILE_NAME purge-chain --base-path /path/to/data --chain gemini-3d : erases data related to the node if data were stored in /path/to/data`
Examples:

# Replace `FARMER_FILE_NAME` with the name of the node file you downloaded from releases
./FARMER_FILE_NAME farm --help
./FARMER_FILE_NAME wipe

IV. Advanced
Support for multiple disks
Farmer has an advanced set of parameters that allow using multiple disks.

To use these advanced parameters you need to replace this command:

./FARMER_FILE_NAME farm --reward-address WALLET_ADDRESS --plot-size PLOT_SIZE

With this:

./FARMER_FILE_NAME --farm path=/path/to/directory,size=PLOT_SIZE farm --reward-address WALLET_ADDRESS

/path/to/directory is path that will store the data, up to PLOT_SIZE.

NOTE: PLOT_SIZE has a different notion here, it doesn't include metadata size!

Multiple farms are supported too, for example:

./FARMER_FILE_NAME \
    --farm path=/media/ssd1,size=100GiB \
    --farm path=/media/ssd2,size=10T \
    --farm path=/media/ssd3,size=10T \
    farm --reward-address WALLET_ADDRESS

You can also print info about farms with info command:

./FARMER_FILE_NAME --farm path=/media/ssd1,size=PLOT_SIZE info

Running an archival node
Instructions above will get you full node (doesn't store the history and state of the whole blockchain, only last 1024 blocks). If you want to opt in to storing the whole history (archival node), remove following parameters (lines) from above instructions before starting your node:

--pruning 1024
--keep-blocks 1024
And instead add this:

--pruning archive
Archival node is useful if you run an RPC node and want to support querying older blockchain history.

NOTE: You can't switch between full and archival node without wiping it, so if you need that, follow steps in Switching to a new snapshot section above.

Build from source (Linux)
If you're running unsupported Linux distribution or CPU architecture, you may try to build binaries yourself from source.

NOTE: This is primarily targeted at tech-savvy users and not recommended unless you know what you're doing. Please try to find answer to your question online before reaching out to maintainers.

You'll have to have Rust toolchain installed as well as LLVM and Clang in addition to usual developer tooling (Ubuntu example):

sudo apt-get install llvm clang

Now clone the source and build snapshot gemini-3d-2023-may-15 (replace occurrences with the snapshot you want to build):

git clone https://github.com/subspace/subspace.git
cd subspace
git checkout gemini-3d-2023-may-15
cargo build \
    --profile production \
    --bin subspace-node \
    --bin subspace-farmer

You'll find two binaries under target/production directory once it succeeds, after which refer to instructions above on how to use them.

V. Having Trouble?
If you are having some issues with running the node or the farmer for the subspace network, feel free to join our Discord or even better you can take a look at our Forums and review and existing questions or post a new one if needed!